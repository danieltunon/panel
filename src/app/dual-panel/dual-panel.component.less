@deep: ~'/deep/';
// use funtion form to conditionally apply styles
// eg. :host([direction="column"]) { }
//     :host(:not(.collapsed)) { }
// careful with direction=row because since it is default it isn't
// always when the component is declared in the markup

:host {
    display: flex;
    height: 100%;
    width: 100%;
}

// TODO: look at styles to see if the nesting is messing up the flex
// problem with the flex-basis that is being passed to the nested child
// but it only happens when the .panel is set to display flex
.panel {
    flex-direction: column;
    overflow: hidden;
}

.panel @{deep} > :not(.panel-header) {
    flex-grow: 1;
}

.dual-panel-container {
    display: flex;
    height: 100%;
    width: 100%;
    position: relative;
    &.dragging {
        &.row {
            cursor: w-resize;
        }
        &.column {
            cursor: n-resize;
        }
        .panel-splitter {
            background-color: #007cff;
        }
    }
}

.panel-splitter {
    position: relative;
    background-color: gray;
    flex: 0 0 4px;
    &:hover {
        background-color: #007cff; //@boldblue
    }
    &::after {
        content: ' ';
        position: absolute;
    }
}

.panel-splitter.row::after {
    cursor: w-resize;
    top: 0;
    left: -5px;
    width: 14px;
    height: 100%;
}
.panel-splitter.column::after {
    cursor: n-resize;
    left: 0;
    top: -5px;
    height: 14px;
    width: 100%;
}
